Overview
========

Three main approaches:

* analytical model with parameter regression
  Non-linear regression over 9 variables, assuming uniform I_photo
  Problems: multiple local minima

* Every time slot forms a distribution (possibly a window)
  Mean and variance needs to be accounted for.
  Candidate method: Kolmogorov-Smirnov test (no major assumptions)
  Problems: Significance, choice of method, underlying assumption

* Each module can be classified in isolation
  Measure how a given module deviates in comparison with all the others.
  Every module considered => should be able to detect small movements
  Goal: define procedure which detects if module k is faulty in the current slot
  Problems: distance measure, mean and variance scaling.

Inherent weakness: two strings can be exchanged while remaining invariant.
This is a problem of labeling which only occurs in the distribution-setting.

Partial progress
================
Isolation-based classification performs well (10/10) for both current and voltage failures in [0.5; 0.9].
This was with parameters 0.6 and 0.3 in classifyYear.m.

Boostrap method
===============

(note: matlab implements bias corrected and accelerated by default when using bootci)

Assume a window size of w samples.

Have a reference window of the w previously (classified as non-faulty) samples (one sample every 5 minutes).
Take a new candidate window of the w latest samples (disjoint from reference).
It is obvious that a window is needed due to the large changes in differences over the day.
Which distance function should be applied to the delta_U_{ij} samples?

Evaluate the arithmetic mean <> over these distributions in order to locate singificant differences.
This is done by taking B bootstrap samples (from each distribution) and evaluating <B_{1,i}> - <B_{2,i}>.
The resulting values form a distribution which will differ from zero if there is a significant difference.
Hence the candidate window is classified as either fault or non-fault, for each of the pv inverters.

Some care needs to be taken in order to study if there is bias in the resulting distribution of differences.

--> Try extracting delta_U_{ij} for a single module, bootstrapping, and studying the resulting distribution.
    Compare this with the distribution formed when an error occurs.

    I.e. need a function calculates all delta_U_{ij} for some given interval.
    Apply the described method upon two of these windows.
    Do this in matlab.

    Is it applicable to perform normalization based on measurement spread?
    Fact: avg(window) becomes larger during the first few hours.

    The coefficient of variation (stddev/mean) behaves reasonably well over the power curve of a day.
    -> Is this only about measuring the dispersion in windows?
    -> Perhaps only generate various statistical measures and perform classification?
    -> What about only considering very significant differences with bias >m as faults?

    (n choose 2) pairwise distances
    Interested in how the distances to a given node changes over time, in relation to the change for all nodes.
    the distances to a given node should remain invariant over time, given that all data has been normalized.
    the normalization should be by the average spread (i.e. the mean of all other sampled node distances).
    hence, given sufficiently constrained contamination, it should be possible to detect that specific deviation.
    Spread might however be dependent on parameters and such.. problems? Nice initial attempt at least.

    ==> Need function which builds the distances (excluding itself) for all modules).
        But the self-distance is zero!

What about small changes in both current and voltage? these would present to a larger extent in the product (power).
